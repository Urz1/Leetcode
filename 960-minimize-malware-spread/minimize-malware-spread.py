class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        # do it once again
        colors = [-1 for _ in range(len(graph))]

        def dfs(node, color):
            if colors[node] != -1:
                return
            colors[node] = color
            for child in range(len(graph[node])):
                if graph[node][child] == 1:
                    dfs(child, color)

        color = 0
        for node in range(len(graph)):
            if colors[node] == -1:
                dfs(node, color)
                color += 1

        nodes = defaultdict(int)
        for c in colors:
            nodes[c] += 1

        infected_nodes = defaultdict(int)
        for node in initial:
            infected_nodes[colors[node]] += 1

        ans = float('inf')
        max_saved = -1
        for node in initial:
            group_color = colors[node]
            if infected_nodes[group_color] == 1:
                saved = nodes[group_color]
                if saved > max_saved:
                    max_saved = saved
                    ans = node
                elif saved == max_saved:
                    ans = min(ans, node)

        if ans == float('inf'):
            return min(initial)
        return ans